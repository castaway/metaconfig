?RCS: $Id$
?RCS:
?RCS: Copyright (c) 2001 Jarkko Hietaniemi
?RCS:
?RCS: You may distribute under the terms of either the GNU General Public
?RCS: License or the Artistic License, as specified in the README file.
?RCS:
?MAKE:run to from targetmkdir targetarch targethost targetport targetdir usecrosscompile hostperl hostgenerate: src awk grep test rm \
	echo sed mkdir cp chmod sysroot make
?MAKE:	-pick add $@ %<
?Y:TOP
?S:usecrosscompile:
?S:	This variable conditionally defines the USE_CROSS_COMPILE symbol,
?S:	and indicates that Perl has been cross-compiled.
?S:.
?S:run:
?S:	This variable contains the command used by Configure
?S:	to copy and execute a cross-compiled executable in the
?S:	target host.  Useful and available only during Perl build.
?S:	Empty string '' if not cross-compiling.
?S:.
?S:from:
?S:	This variable contains the command used by Configure
?S:	to copy files from the target host.  Useful and available
?S:	only during Perl build.
?S:	The string ':' if not cross-compiling.
?S:.
?S:to:
?S:	This variable contains the command used by Configure
?S:	to copy to from the target host.  Useful and available
?S:	only during Perl build.
?S:	The string ':' if not cross-compiling.
?S:.
?S:targetmkdir:
?S: This variable contains the command used by Configure
?S: to create a new directory on the target host.
?S:.
?S:targetdir:
?S: This variable contains a path that will be created on the target host
?S: using targetmkdir, and then used to copy the cross-compiled executables
?S: to. Defaults to '/tmp' if not set.
?S:.
?S:targetarch:
?S:	If cross-compiling, this variable contains the target architecture.
?S:	If not, this will be empty.
?S:.
?S:targethost:
?S: This variable contains the name of a separate host machine that
?S: can be used to run compiled test programs and perl tests on.
?S: Set to empty string if not in use.
?S:.
?S:targetport:
?S: This variable contains the number of a network port to be used to connect
?S: to the host in targethost, if unset defaults to 22 for ssh.
?S:.
?S:hostperl:
?S: If cross-compiling, this variable contains the path to a perl
?S: which will run on the host. If unset a host/miniperl will be compiled
?S: and used.
?S:.
?S:hostgenerate:
?S: If cross-compiling, this variable contains the path to a 'generate_uudmap'
?S: binary that runs on the host. It will be set to host/generate_uudmap which
?S: will be compiled.
?S:.
?C:USE_CROSS_COMPILE:
?C:	This symbol, if defined, indicates that Perl is being cross-compiled.
?C:.
?C:PERL_TARGETARCH:
?C:	This symbol, if defined, indicates the target architecture
?C:	Perl has been cross-compiled to.  Undefined if not a cross-compile.
?C:.
?H:?%<:#ifndef USE_CROSS_COMPILE
?H:?%<:#$usecrosscompile	USE_CROSS_COMPILE	/**/
?H:?%<:#define	PERL_TARGETARCH	"$targetarch"	/**/
?H:?%<:#endif
?H:.
?T:croak pwd exe f q i j cwd
?LINT:extern usecrosscompile
?LINT:extern cc
?LINT:extern usrinc
?LINT:change usrinc
?LINT:change ar
?LINT:change nm
?LINT:change ranlib
?LINT:extern targethost
?LINT:extern targetport
?LINT:extern targetdir
?LINT:change targetdir
?LINT:extern targetuser
?LINT:change targetuser
?LINT:extern targetrun
?LINT:extern targetfrom
?LINT:extern targetto
?LINT:extern targetmkdir
?LINT:change targetrun
?LINT:change targetfrom
?LINT:change targetto
?LINT:extern incpth
?LINT:extern libpth
?LINT:change incpth
?LINT:change libpth
?LINT:extern locincpth
?LINT:extern loclibpth
?LINT:change locincpth
?LINT:change loclibpth
?LINT:extern hostperl
?LINT:extern hostgenerate
: Check for Cross-Compilation
case "$usecrosscompile" in
$define|true|[yY]*)
	$echo "Cross-compiling..."
    croak=''
    case "$cc" in
	*-*-gcc|*-*-g++) # A cross-compiling gcc, probably. Only supporting gcc at the moment.
	    targetarch=`$echo $cc|$sed 's/-g..$//'`
        $echo "Your targetarch is now set to: $targetarch"
	    ar=$targetarch-ar
	    # leave out ld, choosing it is more complex
	    nm=$targetarch-nm
	    ranlib=$targetarch-ranlib
        # if sysroot is set we already have our incpath and libpath discovered, else try to get gcc to tell us
	    if test "X$sysroot" = X; then
	        $echo 'extern int foo;' > try.c
	        set X `$cc -v -E try.c 2>&1 | $awk '/^#include </,/^End of search /'|$grep '/include'`
	        shift
            if $test $# -gt 0; then
	            incpth="$incpth $*"
		        incpth="`$echo $incpth|$sed 's/^ //'`"
                echo "Guessing incpth '$incpth'." >&4
                for i in $*; do
		            j="`$echo $i|$sed 's,/include$,/lib,'`"
 		            if $test -d $j; then
			            libpth="$libpth $j"
		            fi
                done   
		        libpth="`$echo $libpth|$sed 's/^ //'`"
                echo "Guessing libpth '$libpth'." >&4
	        fi
	        $rm -f try.c
        fi
        ;;
	esac
	case "$targetarch" in
	'') echo "Targetarch not defined." >&4; croak=y ;;
        *)  echo "Using targetarch $targetarch." >&4 ;;
	esac
    if test "X$sysroot" = X; then
	    case "$incpth" in
	        '') echo "Incpth not defined." >&4; croak=y ;;
            *)  echo "Using incpth '$incpth'." >&4 ;;
	    esac
	    case "$libpth" in
	        '') echo "Libpth not defined." >&4; croak=y ;;
            *)  echo "Using libpth '$libpth'." >&4 ;;
	    esac
	    case "$usrinc" in
	        '') for i in $incpth; do
	            if $test -f $i/errno.h -a -f $i/stdio.h -a -f $i/time.h; then
		            usrinc=$i
	                echo "Guessing usrinc $usrinc." >&4
		            break
		        fi
	            done
	            case "$usrinc" in
	                '') echo "Usrinc not defined." >&4; croak=y ;;
	            esac
                ;;
            *)  echo "Using usrinc $usrinc." >&4 ;;
	    esac
	    case "$croak" in
	        y) echo "Cannot continue, aborting." >&4; exit 1 ;;
	    esac
        locincpth=' '
        loclibpth=' '
    else
        echo "Cross-compiling using sysroot $sysroot, guessing of GCC inc/lib paths skipped" >&4
    fi
    : compile a host miniperl and generate_uudmap, unless we got passed them
    if $test "X$hostperl" = X; then
      echo "Building host miniperl and generate_uudmap binaries" >&4
      cd ..
      test -d host || mkdir host
      cd host && rm -rf ./*
      ../Configure -des -Dusedevel -Dmksymlinks
      make miniperl
      make generate_uudmap
      hostperl=host/miniperl
      hostgenerate=host/generate_uudmap
      cd ..
      cd UU
    fi
    ;;
*)
    usecrosscompile='undef'
    ;;
esac

: Define -Dtargethost to run compiled tests on another machine
: We are keeping targethost etc around in config.sh, thus they make it into %Config, not sure yet if this is clever.
case "$targethost" in
    '') echo "Checking for cross-compile" >&4
    case "$usecrosscompile$multiarch" in
       *$define*) echo "Skipping the try tests in the rest of Configure as no targethost was defined when cross-compiling" >&4
         if [ -f Makefile ]; then
           echo " "
           echo "Now you must ensure config.sh, config.h and the generated headers exist and run a $make."
         else
           echo "Configure done."
         fi
       exit 0
       ;;
     *) echo "No targethost for running compiler tests against defined, running locally" >&4
        run=''
        to=:
        from=:
        ;;
    esac
    ;;
    *) echo "Using targethost $targethost." >&4
       case "$src" in
	       /*) run=$src/Cross/run
	           targetmkdir=$src/Cross/mkdir
	           to=$src/Cross/to
	           from=$src/Cross/from
	           ;;
	       *)  pwd=`$test -f ../Configure && cd ..; pwd`
	           run=$pwd/Cross/run
	           targetmkdir=$pwd/Cross/mkdir
	           to=$pwd/Cross/to
	           from=$pwd/Cross/from
	           ;;
	   esac
	   case "$targetrun" in
	       '') targetrun=ssh ;;
	   esac
	   case "$targetto" in
	       '') targetto=scp ;;
	   esac
	   case "$targetfrom" in
	       '') targetfrom=scp ;;
	   esac
       run=$run-$targetrun
       to=$to-$targetto
       from=$from-$targetfrom
	   case "$targetdir" in
	       '')  targetdir=/tmp
               echo "Guessing targetdir $targetdir." >&4
               ;;
	   esac
	   case "$targetuser" in
	       '')  targetuser=root
               echo "Guessing targetuser $targetuser." >&4
               ;;
	   esac
	   case "$targetport" in
	       '')  targetport=22
               echo "Guessing targetport $targetport." >&4
               ;;
	   esac
	   case "$targetfrom" in
	       scp)	q=-q ;;
	       *)	q='' ;;
	   esac
	   case "$targetrun" in
	       ssh|rsh)
	           cat >$run <<EOF
#!/bin/sh
case "\$1" in
-cwd)
  shift
  cwd=\$1
  shift
  ;;
esac
case "\$cwd" in
'') cwd=$targetdir ;;
esac
exe=\$1
shift
$to \$exe
$targetrun -p $targetport -l $targetuser $targethost "cd \$cwd && ./\$exe \$@"
EOF
	    ;;
	       *)  echo "Unknown targetrun '$targetrun'" >&4
	           exit 1
	           ;;
	   esac
	   case "$targetmkdir" in
	       */Cross/mkdir)
	    cat >$targetmkdir <<EOF
#!/bin/sh
$targetrun -p $targetport -l $targetuser $targethost "mkdir -p \$@"
EOF
	    $chmod a+rx $targetmkdir
	    ;;
	       *)  echo "Unknown targetmkdir '$targetmkdir'" >&4
	           exit 1
	           ;;
	   esac
	   case "$targetto" in
	       scp|rcp)
	           cat >$to <<EOF
#!/bin/sh
for f in \$@
do
  case "\$f" in
  /*)
    $targetmkdir \`dirname \$f\`
    $targetto -P $targetport $q \$f $targetuser@$targethost:\$f            || exit 1
    ;;
  *)
    $targetmkdir $targetdir/\`dirname \$f\`
    $targetto -P $targetport $q \$f $targetuser@$targethost:$targetdir/\$f || exit 1
    ;;
  esac
done
exit 0
EOF
	           ;;
	       cp) cat >$to <<EOF
#!/bin/sh
for f in \$@
do
  case "\$f" in
  /*)
    $mkdir -p $targetdir/\`dirname \$f\`
    $cp \$f $targetdir/\$f || exit 1
    ;;
  *)
    $targetmkdir $targetdir/\`dirname \$f\`
    $cp \$f $targetdir/\$f || exit 1
    ;;
  esac
done
exit 0
EOF
	           ;;
	       *)  echo "Unknown targetto '$targetto'" >&4
	           exit 1
	           ;;
	   esac
	   case "$targetfrom" in
	       scp|rcp)
	           cat >$from <<EOF
#!/bin/sh
for f in \$@
do
  $rm -f \$f
  $targetfrom -P $targetport $q $targetuser@$targethost:$targetdir/\$f . || exit 1
done
exit 0
EOF
	           ;;
	       cp) cat >$from <<EOF
#!/bin/sh
for f in \$@
do
  $rm -f \$f
  cp $targetdir/\$f . || exit 1
done
exit 0
EOF
	           ;;
	       *)  echo "Unknown targetfrom '$targetfrom'" >&4
	           exit 1
	           ;;
	   esac
	   if $test ! -f $run; then
	       echo "Target 'run' script '$run' not found." >&4
	   else
	       $chmod a+rx $run
	   fi
	   if $test ! -f $to; then
	       echo "Target 'to' script '$to' not found." >&4
	   else
	       $chmod a+rx $to
	   fi
	   if $test ! -f $from; then
	       echo "Target 'from' script '$from' not found." >&4
	   else
	       $chmod a+rx $from
	   fi
	   if $test ! -f $run -o ! -f $to -o ! -f $from; then
	       exit 1
	   fi
	   cat >&4 <<EOF
Using '$run' for remote execution,
and '$from' and '$to'
for remote file transfer.
EOF
	   ;;
esac # if targethost

